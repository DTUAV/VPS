<launch>

<node name="network_delay_model" pkg="network_delay_model" type="network_delay_model_node" output="screen">
      <param name="virtual_object_position_sub_topic" value="/V_UAV_1/LocalPosition/Pose"/>
      <param name="virtual_object_position_pub_topic" value="/virtual/uav0/current_position"/>
      <param name="physical_object_position_sub_topic" value="/simulator/position_sensor/data"/>
      <param name="physical_object_position_pub_topic" value="/V_UAV_2/LocalPosition/pose"/>
      <param name="reset_object_sub_topic" value="/V_UAV_2/reset_object"/>
      <param name="predict_window" value="8"/>                                                     <!--The window size for predicting further system state(predicted steps)-->
      <param name="predict_time_dt" value="0.033"/>                                                  <!--The predicted time step for least square-->
      <param name="target_position_pub_topic" value="/controller/target/position"/>
      <param name="virtual2physical_delay_time_sub_topic" value="/delay_time/v2p"/>
      <param name="physical2virtual_delay_time_sub_topic" value="/delay_time/p2v"/>
      <param name="v2p_noise_mu" value="0.0"/>
      <param name="v2p_noise_sigma" value="5.001"/>
      <param name="p2v_noise_mu" value="0.0"/>
      <param name="p2v_noise_sigma" value="5.001"/>
</node>

<node name="state_estimator" pkg="kf_mpc_controller4" type="state_estimator_node4" output="screen">                                                               <!--The kalman filter running frequency -->
      <param name="dt_obj_position_sub_topic" value="/virtual/uav0/current_position"/>                     <!-- This topic data from digital twin object -->
      <param name="est_move_state_pub_topic" value="/virtual/uav0/current_move_state"/>                    <!-- This topic data from kalman filter-->
      <param name="kf_information_pub_topic" value="/state_estimator/information"/>
      <param name="reset_object_sub_topic" value="/V_UAV_2/reset_object"/>
      <param name="kf_run_hz" value="30"/>                                                                 <!-- The kalman filter running frequency -->
      <param name="update_measure_err_k" value="45.0"/>                                                     <!-- The gain of update measured error-->
</node>

<node name="state_predictor" pkg="kf_mpc_controller4" type="state_predictor_node4" output="screen">
      <param name="predict_positiong_pub_topic" value="/controller/target_position"/>              <!-- This topic data from least square predict -->
      <param name="system_state_sub_topic" value="/virtual/uav0/current_move_state"/>              <!-- This topic data from kalman filter-->
      <param name="predict_time_dt_sub_topic" value="/state_predictor/predict_time_dt"/>           <!--This topic data from mpc controller-predict time-->
      <param name="state_predictor_info_pub_topic" value="/state_predictor/information"/>
      <param name="reset_object_sub_topic" value="/V_UAV_2/reset_object"/>
      <param name="predictor_run_hz" value="30"/>                                                  <!--The kalman filter running frequency -->
      <param name="save_data_window" value="20"/>                                                  <!--The window size for save data from kalman filter -->
      <param name="max_predict_data_window" value="10"/>                                                <!--The window size of state data for least square predictior -->
      <param name="min_predict_data_window" value="4"/>                                                  <!--The window size of state data for least square predictior -->
      <param name="predict_window" value="8"/>                                                     <!--The window size for predicting further system state(predicted steps)-->
      <param name="predict_order" value="3"/>                                                      <!--The predicted function order-->
      <param name="predict_time_dt" value="0.033"/>                                                  <!--The predicted time step for least square-->
      <param name="queue_check_error" value="0.01"/>                                              <!--The error value to check the system state queue to used different predict ways-->
      <param name="max_velocity_x" value = "5.0"/>
      <param name="max_velocity_y" value = "5.0"/>
      <param name="max_velocity_z" value = "5.0"/>

</node>

<node name="mpc_controller" pkg="kf_mpc_controller4" type="mpc_controller_node4" output="screen">
      <param name="current_position_sub_topic" value="/simulator/position_sensor/data"/>                          <!-- This topic data from sensor measure by GPS or UWB or other located system -->
      <param name="target_position_sub_topic" value="/controller/target_position"/>                           <!-- This tipic data from state predictor-->
      <param name="controller_output_pub_topic" value="/simulator/model/input"/>              <!-- This topic data to px4 controller-->
      <param name="update_model_parameter_sub_topic" value="/model_learner/model_parameter"/>
      <param name="predict_time_dt_pub_topic" value="/controller/predict_time_dt"/>
      <param name="reset_object_sub_topic" value="/V_UAV_2/reset_object"/>
      <param name="controller_running_hz" value="30"/>                                                        <!--The mpc controller running frequency -->
      <param name="state_dim" value="3"/>
      <param name="observe_dim" value="3"/>
      <param name="input_dim" value="3"/>
      <param name="control_window" value="5"/>
      <param name="predict_window" value="8"/>
      <param name="max_velocity" value = "2.0"/>
      <param name="sample_time" value="0.33"/>
      <param name="control_out_cost" value="0.0002"/>
      <param name="tracking_cost" value="0.9"/>

</node>

<node name="object_move_simulator" pkg="kf_mpc_controller4" type="object_move_simulator_node4" output="screen">
      <param name="object_input_sub_topic" value="/simulator/model/input"/>                            <!-- This topic data from controller -->
      <param name="reset_object_sub_topic" value="/V_UAV_2/reset_object"/>
      <param name="sensor_data_pub_topic" value="/simulator/position_sensor/data"/>                    <!-- This topic data to controller-->
      <param name="simulator_run_hz" value="50"/>                                                      <!--The simulator running frequency -->
      <param name="model_noise_mu" value="0.0"/>
      <param name="model_noise_sigma" value="0.004"/>
      <param name="sensor_noise_mu" value="0.0"/>
      <param name="sensor_noise_sigma" value="0.005"/>
</node>
</launch>
